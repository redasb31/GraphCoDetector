{"functions": [{"nodes": {"3a8fc77a85eb357b83b83f0f409e2d63": {"type": "function_definition", "idx": "3228:3305"}, "a91a5532ef5939e6b01d4c0d1165834d": {"type": "function_declarator", "idx": "3235:3282"}, "b655a6c6c8bf36908be234df9b50162a": {"type": "compound_statement", "idx": "3282:3305"}, "3530194b20e134389f4f920c3a549ac3": {"type": "ret_type", "idx": "3228:3234"}, "8304a62b807e36e1907d6fcce97db048": {"type": "identifier", "idx": "3235:3242"}, "39b3554c57a13a318ea9b9b40f2d5b73": {"type": "parameter_list", "idx": "3242:3282"}, "93412eeb00973cd6b4c28a6ebea80f85": {"type": "return_statement", "idx": "3286:3303"}, "930cb8a4d3943a1fb1a4103b40dc2767": {"type": "parameter_declaration", "idx": "3243:3251"}, "874481ec0bdd3b68af26d63e16a03c19": {"type": "parameter_declaration", "idx": "3253:3261"}, "3583a55f703236858566c27b209a845f": {"type": "parameter_declaration", "idx": "3263:3271"}, "3b29e9ccc981398d88490b588eea1ae1": {"type": "parameter_declaration", "idx": "3273:3281"}, "20827446dac237d1a49a4932c1c14cb4": {"type": "return", "idx": "3286:3292"}, "da305968a9c53d4e9a7d54e90bf1322c": {"type": "parenthesized_expression", "idx": "3293:3302"}, "49e59836fffd32d39e3edc5358f04a8f": {"type": "primitive_type", "idx": "3243:3249"}, "25789e7f00823813a14f28b45a1e6e57": {"type": "identifier", "idx": "3250:3251"}, "f139e479b827385791a2de4ebc8f0b49": {"type": "primitive_type", "idx": "3253:3259"}, "18be80a4c816372cb7e5b5d84adda5a0": {"type": "identifier", "idx": "3260:3261"}, "72e33a594f3e31a786c00cb300b0bd65": {"type": "primitive_type", "idx": "3263:3269"}, "f9d96bff08d03574969becbc9a3cad49": {"type": "identifier", "idx": "3270:3271"}, "4ff03e8caca239e6bcd4732876c9cb7d": {"type": "primitive_type", "idx": "3273:3279"}, "9495b73c196c3f4c93009d04ebe3b431": {"type": "identifier", "idx": "3280:3281"}, "1fadf6ae83de3bd4b1a748315f992353": {"type": "binary_expression", "idx": "3294:3301"}, "2422c14bac58319c975ac88905ddfddc": {"type": "binary_expression", "idx": "3294:3297"}, "b79dd8ff90013f319521523329005af7": {"type": "-", "idx": "3297:3298"}, "1608dfdd160a3ca5a66065408d6b8ff7": {"type": "binary_expression", "idx": "3298:3301"}, "45c4fcd1a5fd34a4ba369b19936c4e0d": {"type": "identifier", "idx": "3294:3295"}, "43c2d4922da03a71851a44f082eef2fa": {"type": "*", "idx": "3295:3296"}, "b2e0b4de061837979458a5d4cfe2e5a8": {"type": "identifier", "idx": "3296:3297"}, "ba7c18224cd63f52964d499102a69143": {"type": "identifier", "idx": "3298:3299"}, "0820fdfa087d30e08e191c390c5f6b9e": {"type": "*", "idx": "3299:3300"}, "8ad366938cc636afb4fd09477fcaa668": {"type": "identifier", "idx": "3300:3301"}}, "edges": [{"edge": ["3a8fc77a85eb357b83b83f0f409e2d63", "a91a5532ef5939e6b01d4c0d1165834d"], "type": "100"}, {"edge": ["3a8fc77a85eb357b83b83f0f409e2d63", "b655a6c6c8bf36908be234df9b50162a"], "type": "110"}, {"edge": ["3a8fc77a85eb357b83b83f0f409e2d63", "3530194b20e134389f4f920c3a549ac3"], "type": "100"}, {"edge": ["3a8fc77a85eb357b83b83f0f409e2d63", "93412eeb00973cd6b4c28a6ebea80f85"], "type": "001"}, {"edge": ["a91a5532ef5939e6b01d4c0d1165834d", "8304a62b807e36e1907d6fcce97db048"], "type": "100"}, {"edge": ["a91a5532ef5939e6b01d4c0d1165834d", "39b3554c57a13a318ea9b9b40f2d5b73"], "type": "100"}, {"edge": ["b655a6c6c8bf36908be234df9b50162a", "93412eeb00973cd6b4c28a6ebea80f85"], "type": "110"}, {"edge": ["39b3554c57a13a318ea9b9b40f2d5b73", "930cb8a4d3943a1fb1a4103b40dc2767"], "type": "100"}, {"edge": ["39b3554c57a13a318ea9b9b40f2d5b73", "874481ec0bdd3b68af26d63e16a03c19"], "type": "100"}, {"edge": ["39b3554c57a13a318ea9b9b40f2d5b73", "3583a55f703236858566c27b209a845f"], "type": "100"}, {"edge": ["39b3554c57a13a318ea9b9b40f2d5b73", "3b29e9ccc981398d88490b588eea1ae1"], "type": "100"}, {"edge": ["93412eeb00973cd6b4c28a6ebea80f85", "20827446dac237d1a49a4932c1c14cb4"], "type": "100"}, {"edge": ["93412eeb00973cd6b4c28a6ebea80f85", "da305968a9c53d4e9a7d54e90bf1322c"], "type": "100"}, {"edge": ["93412eeb00973cd6b4c28a6ebea80f85", "3530194b20e134389f4f920c3a549ac3"], "type": "010"}, {"edge": ["930cb8a4d3943a1fb1a4103b40dc2767", "49e59836fffd32d39e3edc5358f04a8f"], "type": "100"}, {"edge": ["930cb8a4d3943a1fb1a4103b40dc2767", "25789e7f00823813a14f28b45a1e6e57"], "type": "100"}, {"edge": ["874481ec0bdd3b68af26d63e16a03c19", "f139e479b827385791a2de4ebc8f0b49"], "type": "100"}, {"edge": ["874481ec0bdd3b68af26d63e16a03c19", "18be80a4c816372cb7e5b5d84adda5a0"], "type": "100"}, {"edge": ["3583a55f703236858566c27b209a845f", "72e33a594f3e31a786c00cb300b0bd65"], "type": "100"}, {"edge": ["3583a55f703236858566c27b209a845f", "f9d96bff08d03574969becbc9a3cad49"], "type": "100"}, {"edge": ["3b29e9ccc981398d88490b588eea1ae1", "4ff03e8caca239e6bcd4732876c9cb7d"], "type": "100"}, {"edge": ["3b29e9ccc981398d88490b588eea1ae1", "9495b73c196c3f4c93009d04ebe3b431"], "type": "100"}, {"edge": ["da305968a9c53d4e9a7d54e90bf1322c", "1fadf6ae83de3bd4b1a748315f992353"], "type": "100"}, {"edge": ["1fadf6ae83de3bd4b1a748315f992353", "2422c14bac58319c975ac88905ddfddc"], "type": "100"}, {"edge": ["1fadf6ae83de3bd4b1a748315f992353", "b79dd8ff90013f319521523329005af7"], "type": "100"}, {"edge": ["1fadf6ae83de3bd4b1a748315f992353", "1608dfdd160a3ca5a66065408d6b8ff7"], "type": "100"}, {"edge": ["2422c14bac58319c975ac88905ddfddc", "45c4fcd1a5fd34a4ba369b19936c4e0d"], "type": "100"}, {"edge": ["2422c14bac58319c975ac88905ddfddc", "43c2d4922da03a71851a44f082eef2fa"], "type": "100"}, {"edge": ["2422c14bac58319c975ac88905ddfddc", "b2e0b4de061837979458a5d4cfe2e5a8"], "type": "100"}, {"edge": ["1608dfdd160a3ca5a66065408d6b8ff7", "ba7c18224cd63f52964d499102a69143"], "type": "100"}, {"edge": ["1608dfdd160a3ca5a66065408d6b8ff7", "0820fdfa087d30e08e191c390c5f6b9e"], "type": "100"}, {"edge": ["1608dfdd160a3ca5a66065408d6b8ff7", "8ad366938cc636afb4fd09477fcaa668"], "type": "100"}], "idx": "3228:3305"}], "code": "#include <stdio.h>\n#include <math.h>\n\ndouble gaiseki(double,double,double,double);\n\nmain(){\n  double x[6], y[6], tenx[3], teny[3], len[3], s, m1, m2, ans, bx[5], by[5], temp1, temp2;\n  int i, j, p=0, f, a;\n\n  while(1){\n    for(i=0;i<6;i+=2){\n      scanf(\"%lf %lf %lf %lf\", &x[i], &y[i], &x[i+1], &y[i+1]);\n      if(x[0]==0 && y[0]==0 && x[1]==0 && y[1]==0){\n\tp=1;\n\tbreak;\n      }\n    }\n    if(p==1) break;\n    f=0;\n    \n    bx[0]=x[2]-x[3];\n    by[0]=y[2]-y[3];\n    bx[1]=x[2]-x[0];\n    by[1]=y[2]-y[0];\n    bx[2]=x[2]-x[1];\n    by[2]=y[2]-y[1];\n    temp1=gaiseki(bx[0],by[0],bx[1],by[1]);\n    temp2=gaiseki(bx[0],by[0],bx[2],by[2]);\n    if(temp1*temp2>=0){\n      printf(\"kyo\\n\");\n      continue;\n    }\n    bx[0]=x[0]-x[1];\n    by[0]=y[0]-y[1];\n    bx[1]=x[0]-x[2];\n    by[1]=y[0]-y[2];\n    bx[2]=x[0]-x[3];\n    by[2]=y[0]-y[3];\n    temp1=gaiseki(bx[0],by[0],bx[1],by[1]);\n    temp2=gaiseki(bx[0],by[0],bx[2],by[2]);\n    if(temp1*temp2>=0){\n      printf(\"kyo\\n\");\n      continue;\n    }\n\n    bx[0]=x[4]-x[5];\n    by[0]=y[4]-y[5];\n    bx[1]=x[4]-x[2];\n    by[1]=y[4]-y[2];\n    bx[2]=x[4]-x[3];\n    by[2]=y[4]-y[3];\n    temp1=gaiseki(bx[0],by[0],bx[1],by[1]);\n    temp2=gaiseki(bx[0],by[0],bx[2],by[2]);\n    if(temp1*temp2>=0){\n      printf(\"kyo\\n\");\n      continue;\n    }\n    bx[0]=x[2]-x[3];\n    by[0]=y[2]-y[3];\n    bx[1]=x[2]-x[5];\n    by[1]=y[2]-y[5];\n    bx[2]=x[2]-x[4];\n    by[2]=y[2]-y[4];\n    temp1=gaiseki(bx[0],by[0],bx[1],by[1]);\n    temp2=gaiseki(bx[0],by[0],bx[2],by[2]);\n    if(temp1*temp2>=0){\n      printf(\"kyo\\n\");\n      continue;\n    }\n\n    bx[0]=x[0]-x[1];\n    by[0]=y[0]-y[1];\n    bx[1]=x[0]-x[4];\n    by[1]=y[0]-y[4];\n    bx[2]=x[0]-x[5];\n    by[2]=y[0]-y[5];\n    temp1=gaiseki(bx[0],by[0],bx[1],by[1]);\n    temp2=gaiseki(bx[0],by[0],bx[2],by[2]);\n    if(temp1*temp2>=0){\n      printf(\"kyo\\n\");\n      continue;\n    }\n    bx[0]=x[4]-x[5];\n    by[0]=y[4]-y[5];\n    bx[1]=x[4]-x[1];\n    by[1]=y[4]-y[1];\n    bx[2]=x[4]-x[0];\n    by[2]=y[4]-y[0];\n    temp1=gaiseki(bx[0],by[0],bx[1],by[1]);\n    temp2=gaiseki(bx[0],by[0],bx[2],by[2]);\n    if(temp1*temp2>=0){\n      printf(\"kyo\\n\");\n      continue;\n    }\n\n\n\n    m1=(y[1]-y[0])/(x[1]-x[0]);\n    m2=(y[3]-y[2])/(x[3]-x[2]);\n    \n    tenx[0]=(m1*x[0]-m2*x[2]+y[2]-y[0])/(m1-m2);\n    teny[0]=m1*(tenx[0]-x[0])+y[0];\n\n    m1=(y[3]-y[2])/(x[3]-x[2]);\n    m2=(y[5]-y[4])/(x[5]-x[4]);\n\n    tenx[1]=(m1*x[2]-m2*x[4]+y[4]-y[2])/(m1-m2);\n    teny[1]=m1*(tenx[1]-x[2])+y[2];\n\n    m1=(y[5]-y[4])/(x[5]-x[4]);\n    m2=(y[1]-y[0])/(x[1]-x[0]);\n\n    tenx[2]=(m1*x[4]-m2*x[0]+y[0]-y[4])/(m1-m2);\n    teny[2]=m1*(tenx[2]-x[4])+y[4];\n    \n\n    if((tenx[0]==tenx[1] && teny[0]==teny[1]) || tenx[1]==tenx[2] && (teny[1]==teny[2]) || (tenx[2]==tenx[0] && teny[2]==teny[0])){\n      printf(\"kyo\\n\");\n      continue;\n    }\n   \n    for(i=0,j=1;i<3;i++,j++){\n      if(j==3) j=0;\n      len[i]=sqrt((tenx[i]-tenx[j])*(tenx[i]-tenx[j])+(teny[i]-teny[j])*(teny[i]-teny[j]));\n    }\n    \n\n    s=(len[0]+len[1]+len[2])/2;\n    ans=sqrt(s*(s-len[0])*(s-len[1])*(s-len[2]));\n    \n    a=ans+0.0000001;\n    if(ans>=1900000) printf(\"dai-kichi\\n\");\n    else if(ans>=1000000) printf(\"chu-kichi\\n\");\n    else if(ans>=100000) printf(\"kichi\\n\");\n    else if(ans>0) printf(\"syo-kichi\\n\");\n  }\n  return 0;\n}\n\n\n\ndouble gaiseki(double a, double b, double c, double d){\n  return (a*d-b*c);\n}", "label": 0}