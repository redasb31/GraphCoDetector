{"functions": [{"nodes": {"ac31f412bd6f3e9396e2ef96a4020c3f": {"type": "function_definition", "idx": "793:833"}, "2c138d4849803cdfb542566f8d11835a": {"type": "function_declarator", "idx": "797:808"}, "26ef3005f93a31e8b50bd3cc1ee5b0b7": {"type": "compound_statement", "idx": "809:833"}, "f079fa8f85c530888c9e491a8be05d7d": {"type": "ret_type", "idx": "793:796"}, "9356ef79f6ef38f6ab37bfa0a600a633": {"type": "identifier", "idx": "797:801"}, "a6b28dd328703ab8a2c26d71be448b3d": {"type": "parameter_list", "idx": "802:808"}, "34649d8f56783f08b4d2bb9cf8405a93": {"type": "expression_statement", "idx": "813:819"}, "b9378d95f64f3237b5c58feb4ae6ca76": {"type": "return_statement", "idx": "822:831"}, "8e40a6173c9131f4885d088102e4bbf0": {"type": "parameter_declaration", "idx": "803:807"}, "a12d1b43ad5437d3a23d248c08b3a05c": {"type": "call_expression", "idx": "813:818"}, "a7a5021939ea30a8aba32a6aec84ead6": {"type": "return", "idx": "822:828"}, "4e55bbb7f85f3d37be4daac12d280287": {"type": "number_literal", "idx": "829:830"}, "5d15769048723035ab336b7aa478a10b": {"type": "primitive_type", "idx": "803:807"}, "27d7b435ab723ebc9d9f8a603e604013": {"type": "identifier", "idx": "813:816"}, "0ca8b7ba347436ac84b464741a45094f": {"type": "argument_list", "idx": "816:818"}}, "edges": [{"edge": ["ac31f412bd6f3e9396e2ef96a4020c3f", "2c138d4849803cdfb542566f8d11835a"], "type": "100"}, {"edge": ["ac31f412bd6f3e9396e2ef96a4020c3f", "26ef3005f93a31e8b50bd3cc1ee5b0b7"], "type": "110"}, {"edge": ["ac31f412bd6f3e9396e2ef96a4020c3f", "f079fa8f85c530888c9e491a8be05d7d"], "type": "100"}, {"edge": ["2c138d4849803cdfb542566f8d11835a", "9356ef79f6ef38f6ab37bfa0a600a633"], "type": "100"}, {"edge": ["2c138d4849803cdfb542566f8d11835a", "a6b28dd328703ab8a2c26d71be448b3d"], "type": "100"}, {"edge": ["26ef3005f93a31e8b50bd3cc1ee5b0b7", "34649d8f56783f08b4d2bb9cf8405a93"], "type": "110"}, {"edge": ["26ef3005f93a31e8b50bd3cc1ee5b0b7", "b9378d95f64f3237b5c58feb4ae6ca76"], "type": "100"}, {"edge": ["a6b28dd328703ab8a2c26d71be448b3d", "8e40a6173c9131f4885d088102e4bbf0"], "type": "100"}, {"edge": ["34649d8f56783f08b4d2bb9cf8405a93", "a12d1b43ad5437d3a23d248c08b3a05c"], "type": "100"}, {"edge": ["34649d8f56783f08b4d2bb9cf8405a93", "b9378d95f64f3237b5c58feb4ae6ca76"], "type": "010"}, {"edge": ["b9378d95f64f3237b5c58feb4ae6ca76", "a7a5021939ea30a8aba32a6aec84ead6"], "type": "100"}, {"edge": ["b9378d95f64f3237b5c58feb4ae6ca76", "4e55bbb7f85f3d37be4daac12d280287"], "type": "100"}, {"edge": ["b9378d95f64f3237b5c58feb4ae6ca76", "f079fa8f85c530888c9e491a8be05d7d"], "type": "010"}, {"edge": ["8e40a6173c9131f4885d088102e4bbf0", "5d15769048723035ab336b7aa478a10b"], "type": "100"}, {"edge": ["a12d1b43ad5437d3a23d248c08b3a05c", "27d7b435ab723ebc9d9f8a603e604013"], "type": "100"}, {"edge": ["a12d1b43ad5437d3a23d248c08b3a05c", "0ca8b7ba347436ac84b464741a45094f"], "type": "100"}], "idx": "793:833"}], "code": "#include<stdio.h>\n#include<stdint.h>\n#include<inttypes.h>\n\ntypedef int32_t i32;\n\nvoid print (i32 a, i32 b) {\n  printf (\"%\" PRIi32 \" %\" PRIi32 \"\\n\", a, b);\n}\n\nvoid run (void) {\n  i32 n;\n  scanf (\"%\" SCNi32, &n);\n  if (n == (n & -n)) {\n    puts (\"No\");\n    return;\n  }\n  puts (\"Yes\");\n  print (1, 2);\n  print (2, 3);\n  print (3, n + 1);\n  print (n + 1, n + 2);\n  print (n + 2, n + 3);\n  if (n % 2 != 0) {\n    for (i32 i = 4; i < n; i += 2) {\n      print (i, i + 1);\n      print (i + 1, 1);\n      print (1, n + i);\n      print (n + i, n + i + 1);\n    }\n  } else {\n    for (i32 i = 4; i < n - 1; i += 2) {\n      print (i + 1, i);\n      print (i, 1);\n      print (1, n + i + 1);\n      print (n + i + 1, n + i);\n    }\n    i32 b = n & -n;\n    print (n, b);\n    print (2 * n, n + (n ^ 1 ^ b));\n  }\n}\n\nint main (void) {\n  run();\n  return 0;\n}\n", "label": 0}