{"functions": [{"nodes": {"fb7852a0480031709bbde3b8d627beb6": {"type": "function_definition", "idx": "865:905"}, "de6a245a5ea53fd993f82421b73283e1": {"type": "function_declarator", "idx": "869:880"}, "a3a8f52904053aef9c83ceba8667a255": {"type": "compound_statement", "idx": "881:905"}, "6ad0c6d36479320c923bb2bd1d4f1dbf": {"type": "ret_type", "idx": "865:868"}, "9d9e2c627b7c3dd79476f19b1f3c6504": {"type": "identifier", "idx": "869:873"}, "d90600493fdb3188872ff5159a3bc7a1": {"type": "parameter_list", "idx": "874:880"}, "9ce62b303f173660ad82ff7051b557f7": {"type": "expression_statement", "idx": "885:891"}, "aa5255db364d34efb14daae59ad6d1e0": {"type": "return_statement", "idx": "894:903"}, "2908ca3fb28a34e68c3bc3f6c33be8e5": {"type": "parameter_declaration", "idx": "875:879"}, "5011f5c76b323079b2810db48d7fb282": {"type": "call_expression", "idx": "885:890"}, "4b9164fd9b493a20a9134f9bd2d84d58": {"type": "return", "idx": "894:900"}, "40ddddbf8f8f36c2aa908e5f3d496af2": {"type": "number_literal", "idx": "901:902"}, "0ec9ac899456353d89aef5ebb00b6488": {"type": "primitive_type", "idx": "875:879"}, "8698e0ae9f6030579b2c8bcbfc4aa2e2": {"type": "identifier", "idx": "885:888"}, "c213a1d045a53f4faaf0965022c691b4": {"type": "argument_list", "idx": "888:890"}}, "edges": [{"edge": ["fb7852a0480031709bbde3b8d627beb6", "de6a245a5ea53fd993f82421b73283e1"], "type": "100"}, {"edge": ["fb7852a0480031709bbde3b8d627beb6", "a3a8f52904053aef9c83ceba8667a255"], "type": "110"}, {"edge": ["fb7852a0480031709bbde3b8d627beb6", "6ad0c6d36479320c923bb2bd1d4f1dbf"], "type": "100"}, {"edge": ["de6a245a5ea53fd993f82421b73283e1", "9d9e2c627b7c3dd79476f19b1f3c6504"], "type": "100"}, {"edge": ["de6a245a5ea53fd993f82421b73283e1", "d90600493fdb3188872ff5159a3bc7a1"], "type": "100"}, {"edge": ["a3a8f52904053aef9c83ceba8667a255", "9ce62b303f173660ad82ff7051b557f7"], "type": "110"}, {"edge": ["a3a8f52904053aef9c83ceba8667a255", "aa5255db364d34efb14daae59ad6d1e0"], "type": "100"}, {"edge": ["d90600493fdb3188872ff5159a3bc7a1", "2908ca3fb28a34e68c3bc3f6c33be8e5"], "type": "100"}, {"edge": ["9ce62b303f173660ad82ff7051b557f7", "5011f5c76b323079b2810db48d7fb282"], "type": "100"}, {"edge": ["9ce62b303f173660ad82ff7051b557f7", "aa5255db364d34efb14daae59ad6d1e0"], "type": "010"}, {"edge": ["aa5255db364d34efb14daae59ad6d1e0", "4b9164fd9b493a20a9134f9bd2d84d58"], "type": "100"}, {"edge": ["aa5255db364d34efb14daae59ad6d1e0", "40ddddbf8f8f36c2aa908e5f3d496af2"], "type": "100"}, {"edge": ["aa5255db364d34efb14daae59ad6d1e0", "6ad0c6d36479320c923bb2bd1d4f1dbf"], "type": "010"}, {"edge": ["2908ca3fb28a34e68c3bc3f6c33be8e5", "0ec9ac899456353d89aef5ebb00b6488"], "type": "100"}, {"edge": ["5011f5c76b323079b2810db48d7fb282", "8698e0ae9f6030579b2c8bcbfc4aa2e2"], "type": "100"}, {"edge": ["5011f5c76b323079b2810db48d7fb282", "c213a1d045a53f4faaf0965022c691b4"], "type": "100"}], "idx": "865:905"}], "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<stdint.h>\n#include<inttypes.h>\n\ntypedef int32_t i32;\ntypedef int64_t i64;\n\n#define ALLOC(size,type) ((type*)calloc((size),sizeof(type)))\n\nvoid run (void) {\n  i32 n, m;\n  scanf (\"%\" SCNi32 \"%\" SCNi32, &n, &m);\n  const i32 LIM = 200000;\n  i32 *dp = ALLOC (2 * LIM + 2, i32);\n  i64 sum = 0;\n  for (i32 i = 0; i < n; ++i) {\n    i32 a;\n    scanf (\"%\" SCNi32, &a);\n    sum += a;\n    dp[a]++;\n  }\n  for (i32 i = LIM - 1; i >= 0; --i) {\n    dp[i] += dp[i + 1];\n  }\n  i32 *cnt = ALLOC (200000 + 1, i32);\n  for (i32 i = 0; i < m; ++i) {\n    i32 b;\n    scanf (\"%\" SCNi32, &b);\n    cnt[b]++;\n  }\n  i64 ans = (i64) sum * m;\n  for (i32 i = 1; i <= LIM; ++i) {\n    if (cnt[i] == 0) continue;\n    for (i32 j = 0; j <= 200000; j += i) {\n      ans -= (i64) cnt[i] * (dp[j] - dp[j + i]) * j;\n    }\n  }\n  printf (\"%\" PRIi64 \"\\n\", ans);\n}\n\nint main (void) {\n  run();\n  return 0;\n}\n\n", "label": 0}